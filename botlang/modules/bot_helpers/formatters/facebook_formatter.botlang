(module "facebook-formatter"

    [define format-template
        (function (payload)
            (make-dict (list
                (cons "attachment"
                    (make-dict (list
                        (cons "type" "template")
                        (cons "payload" payload)
                    ))
                )
            ))
        )
    ]

    [define facebook-generic-template
        (function (elements)
            (format-template
                (make-dict (list
                    (cons "template_type" "generic")
                    (list "elements" elements)
                ))
            )
        )
    ]

    [define facebook-button-template
        (function (message buttons)
            (format-template
                (make-dict (list
                    (cons "template_type" "button")
                    (cons "text" message)
                    (list "buttons" buttons)
                ))
            )
        )
    ]

    [define facebook-list-template
        (function (elements)
            (format-template
                (make-dict (list
                    (cons "template_type" "list")
                    (cons "top_element_style" "compact")
                    (list "elements" elements)
                ))
            )
        )
    ]

    [define format-list
        (function (elements)
            (facebook-list-template
                (map
                    (function (element)
                        (make-dict (list
                            (cons "title" (get element 0))
                            (cons "subtitle" (get element 1))
                        ))
                    )
                    elements
                )
            )
        )
    ]

    [define format-facebook-simple-list
        (function (heading elements)
            (append
                (list heading)
                (map
                    (function (elems) (format-list elems))
                    (if (equal?
                            (mod (- (length elements) 1) 4)
                            0
                        )
                        (separate-list elements 3)
                        (separate-list elements 4)
                    )
                )
            )
        )
    ]

    [define separate-list
        (function (list-to-separate num-sub-lists)
            (fold
                (list)
                (function (acc next)
                    [define index (get next 0)]
                    [define element (get next 1)]
                    (if (equal? (mod index num-sub-lists) 0)
                        (append acc (list (list element)))
                        (append
                            (init acc)
                            (list
                                (append (last acc) (list element))
                            )
                        )
                    )
                )
                (enumerate list-to-separate)
            )
        )
    ]

    [define facebook-button-postback
        (function (title payload)
            (make-dict (list
                (cons "type" "postback")
                (cons "title" title)
                (cons "payload" payload)
            ))
        )
    ]

    [define facebook-button-url
        (function (title url)
            (make-dict (list
                (cons "type" "web_url")
                (cons "title" title)
                (cons "url" url)
            ))
        )
    ]

    [define format-option-buttons
        (function (message options)
            (facebook-button-template
                message
                (map
                    [function (option)
                        (facebook-button-postback
                            (get option 1)
                            (get option 0)
                        )
                    ]
                    options
                )
            )
        )
    ]

    [define format-facebook-options
        (function (message all-options)
            (map
                [function (options-group)
                    (format-option-buttons
                        (if (equal? (get options-group 0) 0)
                            message
                            "\u2063"
                        )
                        (get options-group 1)
                    )
                ]
                (enumerate (separate-list all-options 3))
            )
        )
    ]

    [define format-facebook-link
        (function (title link-url image-url)
            (facebook-generic-template (list
                (make-dict (list
                    (cons "title" title)
                    (cons "item_url" link-url)
                    (cons "image_url" image-url)
                ))
            ))
        )
    ]

    (provide
        facebook-list-template
        facebook-button-template
        facebook-generic-template

        facebook-button-url
        facebook-button-postback

        format-facebook-link
        format-facebook-options
        format-facebook-simple-list

        separate-list
    )
)